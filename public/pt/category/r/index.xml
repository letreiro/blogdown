<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>r | Maurício Vancine</title>
    <link>https://mauriciovancine.github.io/pt/category/r/</link>
      <atom:link href="https://mauriciovancine.github.io/pt/category/r/index.xml" rel="self" type="application/rss+xml" />
    <description>r</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>pt</language><copyright>© Maurício Vancine 2021</copyright><lastBuildDate>Sun, 20 Jun 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://mauriciovancine.github.io/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>r</title>
      <link>https://mauriciovancine.github.io/pt/category/r/</link>
    </image>
    
    <item>
      <title>Dados geoespaicias no R</title>
      <link>https://mauriciovancine.github.io/pt/post/r-geospatial-data/</link>
      <pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://mauriciovancine.github.io/pt/post/r-geospatial-data/</guid>
      <description>&lt;h2 id=&#34;contextualização&#34;&gt;Contextualização&lt;/h2&gt;
&lt;h3 id=&#34;sf-principal-pacote-no-r-para-dados-vetoriais&#34;&gt;&lt;em&gt;sf&lt;/em&gt;: principal pacote no R para dados vetoriais&lt;/h3&gt;
&lt;p&gt;Atualmente o principal pacote para trabalhar com dados vetoriais no R é o &lt;a href=&#34;https://r-spatial.github.io/sf/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;sf&lt;/em&gt;&lt;/a&gt;, que implementou o &lt;em&gt;Simple Feature&lt;/em&gt; no R (Pebesma 2018). Entretanto, outro pacote pode ser tão versátil quanto o &lt;em&gt;sf&lt;/em&gt;, no caso o &lt;a href=&#34;https://rspatial.org/terra/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;terra&lt;/em&gt;&lt;/a&gt;, ainda em desenvolvimento.&lt;/p&gt;
&lt;p&gt;O pacote &lt;em&gt;sf&lt;/em&gt; facilitou muito a forma de trabalhar com vetores no R, sendo que as principais vantagens desse pacote são (Lovelace, Nowosad &amp;amp; Muenchow 2019):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rápida importação e exportação de dados&lt;/li&gt;
&lt;li&gt;aprimorado desempenho de plotagem&lt;/li&gt;
&lt;li&gt;objetos &lt;em&gt;sf&lt;/em&gt; podem ser tratados como dataframes na maioria das operações&lt;/li&gt;
&lt;li&gt;funções &lt;em&gt;sf&lt;/em&gt; podem ser combinadas usando o operador &lt;code&gt;%&amp;gt;%&lt;/code&gt; e funcionam no formato tidyverse&lt;/li&gt;
&lt;li&gt;funções &lt;em&gt;sf&lt;/em&gt; são consistentes e intuitivas (quase sempre começam com prefixo &lt;code&gt;st_&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Os tipos de geometrias apresentadas são representadas por diferentes classes: &lt;code&gt;POINT&lt;/code&gt;, &lt;code&gt;LINESTRING&lt;/code&gt; e &lt;code&gt;POLYGON&lt;/code&gt; para apenas uma feição de cada tipo de geometria; &lt;code&gt;MULTIPOINT&lt;/code&gt;, &lt;code&gt;MULTILINESTRING&lt;/code&gt; e &lt;code&gt;MULTIPOLYGON&lt;/code&gt; para várias feições de cada tipo de geometria e; &lt;code&gt;GEOMETRYCOLLECTION&lt;/code&gt; para várias feições e tipos de geometrias (Figura &lt;a href=&#34;#fig:fig-vetor-sf-classes&#34;&gt;1&lt;/a&gt;).&lt;/p&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;img/sf-classes.png&#34; alt=&#34;Tipos de classes suportadas pelo pacote *sf*. Fonte: Lovelace, Nowosad &amp;amp; Muenchow (2019).&#34; width=&#34;50%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figura 1: Tipos de classes suportadas pelo pacote *sf*. Fonte: Lovelace, Nowosad &amp; Muenchow (2019).&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;O pacote &lt;em&gt;sf&lt;/em&gt; define um sistema de três classes hierárquicas (Tabela &lt;a href=&#34;#tab:tab-vetor-sf-estruturas&#34;&gt;&lt;strong&gt;??&lt;/strong&gt;&lt;/a&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Classe &lt;em&gt;sfg&lt;/em&gt; - uma geometria única&lt;/li&gt;
&lt;li&gt;Classe &lt;em&gt;sfc&lt;/em&gt; - uma coluna de geometria, que é um conjunto de geometrias &lt;em&gt;sfg&lt;/em&gt; e informações Sistema de Referência de Coordenadas (do inglês &lt;em&gt;Coordinate Reference Systems- CRS&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Classe &lt;em&gt;sf&lt;/em&gt; - uma camada, que é uma coluna de geometria &lt;em&gt;sfc&lt;/em&gt; dentro de um dataframe com atributos não espaciais&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Table: Tabela 1: Estruturas de dados espaciais no pacote sf. Fonte: &lt;a href=&#34;https://michaeldorman.github.io/R-Spatial-Workshop-at-CBS-2021/main.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dorman (2021)&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Classes&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Hierarquia&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Informação&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;sfg&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Geometria&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Tipo e coordenadas&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;sfc&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Coluna de geometria&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Conjundo de &lt;code&gt;sfg&lt;/code&gt; + CRS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;sf&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Camada&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;sfc&lt;/code&gt; + atributos&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Ao olharmos as informações de um objeto da classe &lt;em&gt;sf&lt;/em&gt;, podemos notar diversas informações que descrevem o mesmo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;resumo do vetor&lt;/em&gt;: indica o número de feições (linhas) e campos (colunas)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;tipo da geometria&lt;/em&gt;: umas das sete classes listadas anteriormente (Figura &lt;a href=&#34;#fig:fig-vetor-sf-classes&#34;&gt;1&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;dimensão&lt;/em&gt;: número de dimensões, geralmente duas (XY)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;bbox (bordas)&lt;/em&gt;: coordenadas mínimas e máximas da longitude e latitude&lt;/li&gt;
&lt;li&gt;&lt;em&gt;informação do CRS&lt;/em&gt;: &lt;code&gt;epsg&lt;/code&gt; ou &lt;code&gt;proj4string&lt;/code&gt; indicando o CRS&lt;/li&gt;
&lt;li&gt;&lt;em&gt;tibble&lt;/em&gt;: tabela de atributos, com destaque para a coluna &lt;code&gt;geom&lt;/code&gt; ou &lt;code&gt;geometry&lt;/code&gt; que representa cada feição ou geometria&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;countries110
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## class       : SpatialPolygonsDataFrame 
## features    : 177 
## extent      : -180, 180, -90, 83.64513  (xmin, xmax, ymin, ymax)
## crs         : +proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 
## variables   : 63
## names       : scalerank,      featurecla, labelrank,  sovereignt, sov_a3, adm0_dif, level,              type,       admin, adm0_a3, geou_dif,     geounit, gu_a3, su_dif,     subunit, ... 
## min values  :         1, Admin-0 country,         2, Afghanistan,    AFG,        0,     2,           Country, Afghanistan,     AFG,        0, Afghanistan,   AFG,      0, Afghanistan, ... 
## max values  :         3, Admin-0 country,         7,    Zimbabwe,    ZWE,        1,     2, Sovereign country,    Zimbabwe,     ZWE,        0,    Zimbabwe,   ZWE,      1,    Zimbabwe, ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos fazer um mapa simples utilizando a função &lt;code&gt;plot()&lt;/code&gt; desse objeto. Para facilitar, escolheremos apenas a primeira coluna &lt;code&gt;[1]&lt;/code&gt; (Figura &lt;a href=&#34;#fig:fig-vetor-mundo&#34;&gt;2&lt;/a&gt;).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IMPORTANTE: faremos mapas mais elaborados na seção xx desse capítulo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot(countries110[1], col = viridis::viridis(100), main = &amp;quot;Mapa do mundo&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in wkt(obj): CRS object has no comment
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://mauriciovancine.github.io/pt/post/r-geospatial-data/index_files/figure-html/fig-vetor-mundo-1.png&#34; alt=&#34;Mapa vetorial do mundo.&#34; width=&#34;100%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figura 2: Mapa vetorial do mundo.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&#34;raster-principal-pacote-no-r-para-dados-raster&#34;&gt;&lt;em&gt;raster&lt;/em&gt;: principal pacote no R para dados raster&lt;/h3&gt;
&lt;p&gt;Atualmente, o principal pacote para trabalhar com dados raster é o &lt;a href=&#34;https://rspatial.org/raster/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;raster&lt;/em&gt;&lt;/a&gt; (Hijmans 2020), apesar de existir outros dois em desenvolvimento e já sendo aplicados, como o &lt;a href=&#34;https://rspatial.org/terra/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;terra&lt;/em&gt;&lt;/a&gt; e o &lt;a href=&#34;https://r-spatial.github.io/stars/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;stars&lt;/em&gt;&lt;/a&gt;. O pacote &lt;em&gt;raster&lt;/em&gt; fornece uma ampla gama de funções para criar, importar, exportar, manipular e processar dados raster no R. O objeto raster pode assumir três classes no R: &lt;code&gt;RasterLayer&lt;/code&gt;, &lt;code&gt;RasterStack&lt;/code&gt; e &lt;code&gt;RasterBrick&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A classe &lt;code&gt;RasterLayer&lt;/code&gt; representa apenas uma camada raster. Para criar um raster no R podemos utilizar a função &lt;code&gt;raster::raster()&lt;/code&gt;. Observando essa classe, podemos notar as seguintes informações:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;class&lt;/em&gt;: classe raster do objeto raster&lt;/li&gt;
&lt;li&gt;&lt;em&gt;dimensions&lt;/em&gt;: número de linhas, colunas e células&lt;/li&gt;
&lt;li&gt;&lt;em&gt;resolution&lt;/em&gt;: largura e altura da célula&lt;/li&gt;
&lt;li&gt;&lt;em&gt;extent&lt;/em&gt;: coordenadas mínimas e máximas da longitude e latitude&lt;/li&gt;
&lt;li&gt;&lt;em&gt;crs&lt;/em&gt;: Sistema de Referência de Coordenadas (&lt;em&gt;CRS&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;source&lt;/em&gt;: fonte dos dados (memória ou disco)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;names&lt;/em&gt;: nome das camadas&lt;/li&gt;
&lt;li&gt;&lt;em&gt;values&lt;/em&gt;: valores máximos e mínimos das células&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;raster_layer &amp;lt;- raster::raster(nrows = 5, ncols = 5, 
                               res = .5,
                               xmn = -61.5, xmx = -59, ymn = -14.5, ymx = -12,
                               vals = sample(1:25, 25, rep = TRUE))
raster_layer
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## class      : RasterLayer 
## dimensions : 5, 5, 25  (nrow, ncol, ncell)
## resolution : 0.5, 0.5  (x, y)
## extent     : -61.5, -59, -14.5, -12  (xmin, xmax, ymin, ymax)
## crs        : +proj=longlat +datum=WGS84 +no_defs 
## source     : memory
## names      : layer 
## values     : 1, 22  (min, max)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Um mapa simples do objeto raster pode ser obtido utilizando a função &lt;code&gt;plot()&lt;/code&gt;, do próprio pacote &lt;em&gt;raster&lt;/em&gt; (Figura &lt;a href=&#34;#fig:fig-raster-layer&#34;&gt;3&lt;/a&gt;).&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot(raster_layer, col = viridis::viridis(n = 25))
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://mauriciovancine.github.io/pt/post/r-geospatial-data/index_files/figure-html/fig-raster-layer-1.png&#34; alt=&#34;Mapa simples de um `RasterLayer`.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figura 3: Mapa simples de um `RasterLayer`.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Além da classe &lt;code&gt;RasterLayer&lt;/code&gt;, há mais duas classes que trabalham com múltiplas camadas: &lt;code&gt;RasterBrick&lt;/code&gt; e &lt;code&gt;RasterStack&lt;/code&gt;. Elas diferem em relação ao número de formatos de arquivo suportados, tipo de representação interna e velocidade de processamento.&lt;/p&gt;
&lt;p&gt;A classe &lt;code&gt;RasterBrick&lt;/code&gt; geralmente corresponde a importação de um único arquivo de imagem de satélite multiespectral (multicamadas) ou a um único objeto com várias camadas na memória. A função &lt;code&gt;raster::brick()&lt;/code&gt; cria um objeto &lt;code&gt;RasterBrick&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;raster_layer1 &amp;lt;- raster_layer
raster_layer2 &amp;lt;- raster_layer * raster_layer
raster_layer3 &amp;lt;- sqrt(raster_layer)
raster_layer4 &amp;lt;- log10(raster_layer)

raster_brick &amp;lt;- raster::brick(raster_layer1, raster_layer2, raster_layer3, raster_layer4)
raster_brick
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## class      : RasterBrick 
## dimensions : 5, 5, 25, 4  (nrow, ncol, ncell, nlayers)
## resolution : 0.5, 0.5  (x, y)
## extent     : -61.5, -59, -14.5, -12  (xmin, xmax, ymin, ymax)
## crs        : +proj=longlat +datum=WGS84 +no_defs 
## source     : memory
## names      :    layer.1,    layer.2,    layer.3,    layer.4 
## min values :          1,          1,          1,          0 
## max values :  22.000000, 484.000000,   4.690416,   1.342423
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ao utilizarmos a função &lt;code&gt;plot()&lt;/code&gt; do pacote &lt;em&gt;raster&lt;/em&gt;, podemos visualizar todos os raster contidos no objeto &lt;code&gt;RasterBrick&lt;/code&gt; (Figura &lt;a href=&#34;#fig:fig-raster-brick&#34;&gt;4&lt;/a&gt;).&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot(raster_brick, col = viridis::viridis(n = 25))
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://mauriciovancine.github.io/pt/post/r-geospatial-data/index_files/figure-html/fig-raster-brick-1.png&#34; alt=&#34;Mapas simples de um raster RasterBrick.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figura 4: Mapas simples de um raster RasterBrick.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Já a classe &lt;code&gt;RasterStack&lt;/code&gt; permite conectar vários objetos raster armazenados em arquivos diferentes ou vários objetos na memória. Um &lt;code&gt;RasterStack&lt;/code&gt; é uma lista de objetos &lt;code&gt;RasterLayer&lt;/code&gt; com a mesma extensão, resolução e CRS. Uma maneira de criá-lo é com a junção de vários objetos espaciais já existentes no ambiente do R ou listar vários arquivos raster em um diretório armazenado no disco. A função &lt;code&gt;raster::stack()&lt;/code&gt; cria um objeto &lt;code&gt;RasterStack&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Outra diferença é que o tempo de processamento para objetos &lt;code&gt;RasterBrick&lt;/code&gt; geralmente é menor do que para objetos &lt;code&gt;RasterStack&lt;/code&gt;. A decisão sobre qual classe &lt;code&gt;Raster&lt;/code&gt; deve ser usada depende principalmente do caráter dos dados de entrada.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;raster_layer1 &amp;lt;- raster_layer
raster_layer2 &amp;lt;- raster_layer * raster_layer
raster_layer3 &amp;lt;- sqrt(raster_layer)
raster_layer4 &amp;lt;- log10(raster_layer)

raster_stack &amp;lt;- raster::stack(raster_layer1, raster_layer2, raster_layer3, raster_layer4)
raster_stack
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## class      : RasterStack 
## dimensions : 5, 5, 25, 4  (nrow, ncol, ncell, nlayers)
## resolution : 0.5, 0.5  (x, y)
## extent     : -61.5, -59, -14.5, -12  (xmin, xmax, ymin, ymax)
## crs        : +proj=longlat +datum=WGS84 +no_defs 
## names      :    layer.1,    layer.2,    layer.3,    layer.4 
## min values :          1,          1,          1,          0 
## max values :  22.000000, 484.000000,   4.690416,   1.342423
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Da mesma forma, ao utilizar a função &lt;code&gt;plot()&lt;/code&gt; do pacote &lt;em&gt;raster&lt;/em&gt;, podemos visualizar todos os raster contidos no objeto &lt;code&gt;RasterStack&lt;/code&gt; (Figura &lt;a href=&#34;#fig:fig-raster-stack&#34;&gt;5&lt;/a&gt;).&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot(raster_stack, col = viridis::viridis(n = 25))
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://mauriciovancine.github.io/pt/post/r-geospatial-data/index_files/figure-html/fig-raster-stack-1.png&#34; alt=&#34;Mapas simples de um raster RasterStack.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figura 5: Mapas simples de um raster RasterStack.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Paralelização no R</title>
      <link>https://mauriciovancine.github.io/pt/post/r-parallel/</link>
      <pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://mauriciovancine.github.io/pt/post/r-parallel/</guid>
      <description>&lt;h1 id=&#34;contextualização&#34;&gt;Contextualização&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://nceas.github.io/oss-lessons/parallel-computing-in-r/parallel-computing-in-r.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.dominodatalab.com/multicore-data-science-r-python/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/foreach/vignettes/foreach.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://privefl.github.io/blog/a-guide-to-parallelism-in-r/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>renv: ambientes reprodutivos no R</title>
      <link>https://mauriciovancine.github.io/pt/post/r-env/</link>
      <pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://mauriciovancine.github.io/pt/post/r-env/</guid>
      <description></description>
    </item>
    
    <item>
      <title>rgee: Google Earth Engine para o R </title>
      <link>https://mauriciovancine.github.io/pt/post/r-gee/</link>
      <pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://mauriciovancine.github.io/pt/post/r-gee/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://r-spatial.github.io/rgee/&#34;&gt;https://r-spatial.github.io/rgee/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://courses.spatialthoughts.com/end-to-end-gee.html&#34;&gt;https://courses.spatialthoughts.com/end-to-end-gee.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
